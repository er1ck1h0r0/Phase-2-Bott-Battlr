{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/eric/Development/code/phase-2/Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/src/components/BotsPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nfunction BotsPage() {\n  _s();\n\n  //start here with your code for step one\n  const [bots, setBots] = useState([]); //Fetch bots from server\n\n  useEffect(() => {\n    const fetchData = () => {\n      return fetch(`http://localhost:8002/bots`).then(resp => resp.json()).then(data => {\n        setBots(data);\n      });\n    };\n\n    fetchData();\n  }, []); // Add bot to army when clicked\n\n  function enlistBot(bot) {\n    setBots(bots.map(b => {\n      if (b.id === bot.id) {\n        return { ...b,\n          army: true\n        };\n      }\n\n      return b;\n    }));\n  } // Remove bot from army when clicked\n\n\n  function removeBot(bot) {\n    setBots(bots.map(b => {\n      if (b.id === bot.id) {\n        return { ...b,\n          army: false\n        };\n      }\n\n      return b;\n    }));\n  } // Delete bot from service forever\n\n\n  async function deleteBot(bot) {\n    await fetch(`http://localhost:8002/bots/${bot.id}`, {\n      method: 'DELETE'\n    });\n    setBots(prevBots => {\n      return prevBots.filter(b => {\n        return b.id !== bot.id;\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(YourBotArmy, {\n      bots: bots.filter(b => b.army),\n      removeBot: removeBot,\n      deleteBot: deleteBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: bots,\n      enlistBot: enlistBot,\n      deleteBot: deleteBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BotsPage, \"HLWYdwhjlsHzdjlYtqtFyxxPKrE=\");\n\n_c = BotsPage;\nexport default BotsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"sources":["/home/eric/Development/code/phase-2/Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/src/components/BotsPage.js"],"names":["React","useState","useEffect","YourBotArmy","BotCollection","BotsPage","bots","setBots","fetchData","fetch","then","resp","json","data","enlistBot","bot","map","b","id","army","removeBot","deleteBot","method","prevBots","filter"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC,CAFkB,CAIlB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,SAAS,GAAG,MAAM;AACtB,aAAOC,KAAK,CAAE,4BAAF,CAAL,CACJC,IADI,CACEC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADX,EAEJF,IAFI,CAEEG,IAAD,IAAU;AACdN,QAAAA,OAAO,CAACM,IAAD,CAAP;AACD,OAJI,CAAP;AAKD,KAND;;AAQAL,IAAAA,SAAS;AACV,GAVQ,EAUN,EAVM,CAAT,CALkB,CAiBlB;;AACA,WAASM,SAAT,CAAmBC,GAAnB,EAAwB;AACtBR,IAAAA,OAAO,CAACD,IAAI,CAACU,GAAL,CAAUC,CAAD,IAAO;AACtB,UAAIA,CAAC,CAACC,EAAF,KAASH,GAAG,CAACG,EAAjB,EAAqB;AACnB,eAAO,EAAE,GAAGD,CAAL;AAAQE,UAAAA,IAAI,EAAE;AAAd,SAAP;AACD;;AACD,aAAOF,CAAP;AACD,KALO,CAAD,CAAP;AAMD,GAzBiB,CA2BlB;;;AACA,WAASG,SAAT,CAAmBL,GAAnB,EAAwB;AACtBR,IAAAA,OAAO,CAACD,IAAI,CAACU,GAAL,CAAUC,CAAD,IAAO;AACtB,UAAIA,CAAC,CAACC,EAAF,KAASH,GAAG,CAACG,EAAjB,EAAqB;AACnB,eAAO,EAAE,GAAGD,CAAL;AAAQE,UAAAA,IAAI,EAAE;AAAd,SAAP;AACD;;AACD,aAAOF,CAAP;AACD,KALO,CAAD,CAAP;AAMD,GAnCiB,CAqClB;;;AACA,iBAAeI,SAAf,CAAyBN,GAAzB,EAA8B;AAC5B,UAAMN,KAAK,CAAE,8BAA6BM,GAAG,CAACG,EAAG,EAAtC,EAAyC;AAClDI,MAAAA,MAAM,EAAE;AAD0C,KAAzC,CAAX;AAGAf,IAAAA,OAAO,CAACgB,QAAQ,IAAI;AAClB,aAAOA,QAAQ,CAACC,MAAT,CAAiBP,CAAD,IAAO;AAC5B,eAAOA,CAAC,CAACC,EAAF,KAASH,GAAG,CAACG,EAApB;AACD,OAFM,CAAP;AAGD,KAJM,CAAP;AAKD;;AAED,sBACE;AAAA,4BACE,QAAC,WAAD;AACE,MAAA,IAAI,EAAEZ,IAAI,CAACkB,MAAL,CAAaP,CAAD,IAAOA,CAAC,CAACE,IAArB,CADR;AAEE,MAAA,SAAS,EAAEC,SAFb;AAGE,MAAA,SAAS,EAAEC;AAHb;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,aAAD;AAAe,MAAA,IAAI,EAAEf,IAArB;AAA2B,MAAA,SAAS,EAAEQ,SAAtC;AAAiD,MAAA,SAAS,EAAEO;AAA5D;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA3DQhB,Q;;KAAAA,Q;AA6DT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nfunction BotsPage() {\n  //start here with your code for step one\n  const [bots, setBots] = useState([]);\n\n  //Fetch bots from server\n  useEffect(() => {\n    const fetchData = () => {\n      return fetch(`http://localhost:8002/bots`)\n        .then((resp) => resp.json())\n        .then((data) => {\n          setBots(data);\n        });\n    };\n  \n    fetchData();\n  }, []);\n\n  // Add bot to army when clicked\n  function enlistBot(bot) {\n    setBots(bots.map((b) => {\n      if (b.id === bot.id) {\n        return { ...b, army: true };\n      }\n      return b;\n    }));\n  }\n\n  // Remove bot from army when clicked\n  function removeBot(bot) {\n    setBots(bots.map((b) => {\n      if (b.id === bot.id) {\n        return { ...b, army: false };\n      }\n      return b;\n    }));\n  }\n\n  // Delete bot from service forever\n  async function deleteBot(bot) {\n    await fetch(`http://localhost:8002/bots/${bot.id}`, {\n      method: 'DELETE'\n    });\n    setBots(prevBots => {\n      return prevBots.filter((b) => {\n        return b.id !== bot.id;\n      });\n    });\n  }\n\n  return (\n    <div>\n      <YourBotArmy\n        bots={bots.filter((b) => b.army)}\n        removeBot={removeBot}\n        deleteBot={deleteBot}\n      />\n      <BotCollection bots={bots} enlistBot={enlistBot} deleteBot={deleteBot} />\n    </div>\n  );\n}\n\nexport default BotsPage;\n"]},"metadata":{},"sourceType":"module"}