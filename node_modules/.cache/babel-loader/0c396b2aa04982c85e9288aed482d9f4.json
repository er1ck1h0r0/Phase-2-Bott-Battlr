{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/eric/Development/code/phase-2/Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/src/components/BotsPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nfunction BotsPage() {\n  _s();\n\n  //start here with your code for step one\n  const [bots, setBots] = useState([]); //a utility function to fetch data from the server\n\n  function fetchData() {\n    return fetch(`http://localhost:8002/bots`).then(resp => resp.json()).then(data => {\n      setBots(data);\n    });\n  } //run fetch whenever the page loads\n\n\n  useEffect(() => {\n    fetchData();\n  }, []); //add bot to army when the bot is clicked\n\n  function enlistBot(bot) {\n    setBots(bots.map(b => b.id === bot.id ? { ...b,\n      army: true\n    } : b));\n  }\n\n  function removeBot(bot) {\n    setBots(bots.map(b => b.id === bot.id ? { ...b,\n      army: false\n    } : b));\n  }\n\n  function deleteBot(bot) {\n    const deletedBot = bots.filter(b => b.id !== bot.id);\n    setBots(bots => deletedBot);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(YourBotArmy, {\n      bots: bots.filter(b => b.army),\n      removeBot: removeBot,\n      deleteBot: deleteBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BotCollection, {\n      bots: bots,\n      enlistBot: enlistBot,\n      deleteBot: deleteBot\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(BotsPage, \"HLWYdwhjlsHzdjlYtqtFyxxPKrE=\");\n\n_c = BotsPage;\nexport default BotsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"BotsPage\");","map":{"version":3,"sources":["/home/eric/Development/code/phase-2/Challenge-2-Bot-Battlr-021023/Challenge-2-Bot-Battlr/code-challenge/src/components/BotsPage.js"],"names":["React","useState","useEffect","YourBotArmy","BotCollection","BotsPage","bots","setBots","fetchData","fetch","then","resp","json","data","enlistBot","bot","map","b","id","army","removeBot","deleteBot","deletedBot","filter"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,SAASC,QAAT,GAAoB;AAAA;;AAClB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC,CAFkB,CAIlB;;AACA,WAASO,SAAT,GAAqB;AACnB,WAAOC,KAAK,CAAE,4BAAF,CAAL,CACJC,IADI,CACEC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADX,EAEJF,IAFI,CAEEG,IAAD,IAAU;AACdN,MAAAA,OAAO,CAACM,IAAD,CAAP;AACD,KAJI,CAAP;AAKD,GAXiB,CAYlB;;;AACAX,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,SAAS;AACV,GAFQ,EAEN,EAFM,CAAT,CAbkB,CAiBlB;;AAEA,WAASM,SAAT,CAAmBC,GAAnB,EAAwB;AACtBR,IAAAA,OAAO,CAACD,IAAI,CAACU,GAAL,CAAUC,CAAD,IAAQA,CAAC,CAACC,EAAF,KAASH,GAAG,CAACG,EAAb,GAAkB,EAAE,GAAGD,CAAL;AAAQE,MAAAA,IAAI,EAAE;AAAd,KAAlB,GAAyCF,CAA1D,CAAD,CAAP;AACD;;AAED,WAASG,SAAT,CAAmBL,GAAnB,EAAwB;AACtBR,IAAAA,OAAO,CAACD,IAAI,CAACU,GAAL,CAAUC,CAAD,IAAQA,CAAC,CAACC,EAAF,KAASH,GAAG,CAACG,EAAb,GAAkB,EAAE,GAAGD,CAAL;AAAQE,MAAAA,IAAI,EAAE;AAAd,KAAlB,GAA0CF,CAA3D,CAAD,CAAP;AACD;;AAED,WAASI,SAAT,CAAmBN,GAAnB,EAAwB;AACtB,UAAMO,UAAU,GAAGhB,IAAI,CAACiB,MAAL,CAAaN,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASH,GAAG,CAACG,EAAhC,CAAnB;AACAX,IAAAA,OAAO,CAAED,IAAD,IAAUgB,UAAX,CAAP;AACD;;AACD,sBACE;AAAA,4BACE,QAAC,WAAD;AACE,MAAA,IAAI,EAAEhB,IAAI,CAACiB,MAAL,CAAaN,CAAD,IAAOA,CAAC,CAACE,IAArB,CADR;AAEE,MAAA,SAAS,EAAEC,SAFb;AAGE,MAAA,SAAS,EAAEC;AAHb;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,aAAD;AAAe,MAAA,IAAI,EAAEf,IAArB;AAA2B,MAAA,SAAS,EAAEQ,SAAtC;AAAiD,MAAA,SAAS,EAAEO;AAA5D;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAzCQhB,Q;;KAAAA,Q;AA2CT,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport YourBotArmy from \"./YourBotArmy\";\nimport BotCollection from \"./BotCollection\";\n\nfunction BotsPage() {\n  //start here with your code for step one\n  const [bots, setBots] = useState([]);\n\n  //a utility function to fetch data from the server\n  function fetchData() {\n    return fetch(`http://localhost:8002/bots`)\n      .then((resp) => resp.json())\n      .then((data) => {\n        setBots(data);\n      });\n  }\n  //run fetch whenever the page loads\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  //add bot to army when the bot is clicked\n\n  function enlistBot(bot) {\n    setBots(bots.map((b) => (b.id === bot.id ? { ...b, army: true } : b)));\n  }\n\n  function removeBot(bot) {\n    setBots(bots.map((b) => (b.id === bot.id ? { ...b, army: false } : b)));\n  }\n\n  function deleteBot(bot) {\n    const deletedBot = bots.filter((b) => b.id !== bot.id);\n    setBots((bots) => deletedBot);\n  }\n  return (\n    <div>\n      <YourBotArmy\n        bots={bots.filter((b) => b.army)}\n        removeBot={removeBot}\n        deleteBot={deleteBot}\n      />\n      <BotCollection bots={bots} enlistBot={enlistBot} deleteBot={deleteBot} />\n    </div>\n  );\n}\n\nexport default BotsPage;"]},"metadata":{},"sourceType":"module"}